next:
- build: docker
	copy:
	- /exe: exe/
	- /cfg: cfg/
	config:
		base_image: eons/guest.img
		image_name: eons/worker.k8s.guest.img
		image_os: alpine
		env: 
			ALWAYS_WAIT: 5
		after_setup:
		- RUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/main' > /etc/apk/repositories
		- RUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/community' >> /etc/apk/repositories
		- RUN echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories
		install:
		- containerd
		- kubelet
		- kubectl
		- kubeadm
		- micro
		- rsync
		filesystems:
		- name: persist
			mount: /mnt/persist
			order: 10
		networks:
		- name: internode
			order: 30
		- name: administrator
			order: 31
		launch:
			05_modprobe_overlay: modprobe overlay
			20_setup_storage: /usr/local/bin/setup_storage.sh
			30_config: /usr/local/bin/configure.sh
			40_mkkubelet: /usr/local/bin/mkkubelet.sh
			50_containerd: containerd
			60_kubelet: echo "NOT IMPLEMENTED - awaiting mkkubelet"; exit(1)
			90_crond: crontab /opt/crontab; crond -f -d 8
		also:
		- ADD cfg/opt/crontab /opt/crontab
		- ADD cfg/etc/containerd/config.toml /etc/containerd/config.toml
		- ADD cfg/etc/periodic/15min/persist_var_lib /etc/periodic/15min/persist_var_lib
		- ADD cfg/etc/periodic/15min/kubelet_checkin /etc/periodic/15min/kubelet_checkin
		tags: 
		- latest
- build: docker_publish
	run_when_any:
	- release
	config:
		image_name: eons/worker.k8s.guest.img